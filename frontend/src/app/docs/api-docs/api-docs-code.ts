//DO NOT EDIT THIS FILE BY HAND

export const restApiDocsCode = {
    "get-difficulty-adjustment": {
        "mainnet": {
            "curl": {
                "text": "/v1/difficulty-adjustment",
                "textDisplay": "/v1/difficulty-adjustment"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://mempool.space/mempool.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        bitcoin: {\n          difficulty\n        }\n      } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n      });\n      const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n      document.getElementById(\"result\").textContent = JSON.stringify(difficultyAdjustment, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import mempoolJS from \"@mempool/mempool.js\";\nconst init = async () => {\n    const {\n        bitcoin: {\n            difficulty\n        }\n    } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n    });\n    const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n    console.log(difficultyAdjustment);\n};\ninit();",
            "response": "{\n  \"progressPercent\": 15.823412698412698,\n  \"difficultyChange\": 6.881994237083711,\n  \"estimatedRetargetDate\": 1674948824102,\n  \"remainingBlocks\": 1697,\n  \"remainingTime\": 952638102,\n  \"previousRetarget\": 10.256723766205752,\n  \"nextRetargetHeight\": 774144,\n  \"timeAvg\": 561366,\n  \"timeOffset\": 0\n}"
        },
        "testnet": {
            "curl": {
                "text": "/v1/difficulty-adjustment",
                "textDisplay": "/v1/difficulty-adjustment"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://mempool.space/mempool.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        bitcoin: {\n          difficulty\n        }\n      } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n      });\n      const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n      document.getElementById(\"result\").textContent = JSON.stringify(difficultyAdjustment, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import mempoolJS from \"@mempool/mempool.js\";\nconst init = async () => {\n    const {\n        bitcoin: {\n            difficulty\n        }\n    } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n    });\n    const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n    console.log(difficultyAdjustment);\n};\ninit();",
            "response": "{\n  \"progressPercent\": 83.13492063492063,\n  \"difficultyChange\": 13.278961834812764,\n  \"estimatedRetargetDate\": 1674176282100,\n  \"remainingBlocks\": 340,\n  \"remainingTime\": 180086100,\n  \"previousRetarget\": 28.492366366514947,\n  \"nextRetargetHeight\": 2417184,\n  \"timeAvg\": 529665,\n  \"timeOffset\": 0\n}"
        },
        "signet": {
            "curl": {
                "text": "/v1/difficulty-adjustment",
                "textDisplay": "/v1/difficulty-adjustment"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://mempool.space/mempool.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        bitcoin: {\n          difficulty\n        }\n      } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n      });\n      const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n      document.getElementById(\"result\").textContent = JSON.stringify(difficultyAdjustment, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import mempoolJS from \"@mempool/mempool.js\";\nconst init = async () => {\n    const {\n        bitcoin: {\n            difficulty\n        }\n    } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n    });\n    const difficultyAdjustment = await difficulty.getDifficultyAdjustment();\n    console.log(difficultyAdjustment);\n};\ninit();",
            "response": "{\n  \"progressPercent\": 57.14285714285714,\n  \"difficultyChange\": -1.6850935997166583,\n  \"estimatedRetargetDate\": 1674523480512,\n  \"remainingBlocks\": 864,\n  \"remainingTime\": 527284512,\n  \"previousRetarget\": 2.2006503557757755,\n  \"nextRetargetHeight\": 127008,\n  \"timeAvg\": 610283,\n  \"timeOffset\": 0\n}"
        }
    },
    "get-stats": {
        "bisq": {
            "curl": {
                "text": "/stats",
                "textDisplay": "/stats"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://bisq.markets/bisq.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        statistics\n      } = bisqJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n      });\n      const stats = await statistics.getStats();\n      document.getElementById(\"result\").textContent = JSON.stringify(stats, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import bisqJS from \"@mempool/bisq.js\";\nconst init = async () => {\n    const {\n        statistics\n    } = bisqJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n    });\n    const stats = await statistics.getStats();\n    console.log(stats);\n};\ninit();",
            "response": "{\n  \"addresses\": 316634,\n  \"minted\": 6665919.35,\n  \"burnt\": 3485411.62,\n  \"spent_txos\": 363733,\n  \"unspent_txos\": 3360\n}"
        }
    },
    "get-blocks": {
        "mainnet": {
            "curl": {
                "text": "/v1/blocks/730000",
                "textDisplay": "/v1/blocks[/:startHeight]"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://mempool.space/mempool.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        bitcoin: {\n          blocks\n        }\n      } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n      });\n      const getBlocks = await blocks.getBlocks({\n        startHeight: 730000\n      });\n      document.getElementById(\"result\").textContent = JSON.stringify(getBlocks, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import mempoolJS from \"@mempool/mempool.js\";\nconst init = async () => {\n    const {\n        bitcoin: {\n            blocks\n        }\n    } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n    });\n    const getBlocks = await blocks.getBlocks({\n        startHeight: 730000\n    });\n    console.log(getBlocks);\n};\ninit();",
            "response": "[\n  {\n    \"id\": \"0000000000000000000384f28cb3b9cf4377a39cfd6c29ae9466951de38c0529\",\n    \"timestamp\": 1648829449,\n    \"height\": 730000,\n    \"version\": 536870912,\n    \"bits\": 386521239,\n    \"nonce\": 3580664066,\n    \"difficulty\": 28587155782195.14,\n    \"merkle_root\": \"efa344bcd6c0607f93b709515dd6dc5496178112d680338ebea459e3de7b4fbc\",\n    \"tx_count\": 1627,\n    \"size\": 1210916,\n    \"weight\": 3993515,\n    \"previousblockhash\": \"00000000000000000008b6f6fb83f8d74512ef1e0af29e642dd20daddd7d318f\",\n    \"extras\": {\n      \"coinbaseRaw\": \"0390230b1362696e616e63652f383038e0006f02cd583765fabe6d6d686355577affaad03015e732428a927a5d2d842471b350394139616bcb4401d804000000000000001a750000c9ad0000\",\n      \"medianFee\": 11,\n      \"feeRange\": [\n        1,\n        11,\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"reward\": 641321983,\n      \"totalFees\": 16321983,\n      \"avgFee\": 10038,\n      \"avgFeeRate\": 16,\n      \"pool\": {\n        \"id\": 105,\n        \"name\": \"Binance Pool\",\n        \"slug\": \"binancepool\"\n      },\n      \"usd\": null\n    }\n  },\n  {\n    \"id\": \"00000000000000000008b6f6fb83f8d74512ef1e0af29e642dd20daddd7d318f\",\n    \"timestamp\": 1648828946,\n    \"height\": 729999,\n    \"version\": 793796608,\n    \"bits\": 386521239,\n    \"nonce\": 3477019455,\n    \"difficulty\": 28587155782195.14,\n    \"merkle_root\": \"d84f9cc1823bd069c505061b1f6faabd809d67ab5354e9f6234312dc4bdb1ecf\",\n    \"tx_count\": 2574,\n    \"size\": 1481957,\n    \"weight\": 3993485,\n    \"previousblockhash\": \"000000000000000000071e6c86c2175aa86817cae2a77acd95372b55c1103d89\",\n    \"extras\": {\n      \"coinbaseRaw\": \"038f230b1362696e616e63652f373739d8002900ca5de7a9fabe6d6dda31112c36c10a523154eae76847579755cd4ae558ee2e6f9f200b05dd32a0bf04000000000000006372000000020000\",\n      \"medianFee\": 17,\n      \"feeRange\": [\n        2,\n        11,\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"reward\": 649090210,\n      \"totalFees\": 24090210,\n      \"avgFee\": 9362,\n      \"avgFeeRate\": 24,\n      \"pool\": {\n        \"id\": 105,\n        \"name\": \"Binance Pool\",\n        \"slug\": \"binancepool\"\n      },\n      \"usd\": null\n    }\n  },\n  {\n    \"...\": \"...\"\n  }\n]"
        },
        "testnet": {
            "curl": {
                "text": "/v1/blocks/2091187",
                "textDisplay": "/v1/blocks[/:startHeight]"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://mempool.space/mempool.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        bitcoin: {\n          blocks\n        }\n      } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n      });\n      const getBlocks = await blocks.getBlocks({\n        startHeight: 2091187\n      });\n      document.getElementById(\"result\").textContent = JSON.stringify(getBlocks, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import mempoolJS from \"@mempool/mempool.js\";\nconst init = async () => {\n    const {\n        bitcoin: {\n            blocks\n        }\n    } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n    });\n    const getBlocks = await blocks.getBlocks({\n        startHeight: 2091187\n    });\n    console.log(getBlocks);\n};\ninit();",
            "response": "[\n  {\n    \"id\": \"00000000000000533f63df886281a9fd74da163e84a21445153ff480e5f57970\",\n    \"timestamp\": 1630641890,\n    \"height\": 2091187,\n    \"version\": 545259520,\n    \"bits\": 436273151,\n    \"nonce\": 309403673,\n    \"difficulty\": 16777216,\n    \"merkle_root\": \"4d6df12a4af11bb928c7b2930e0a4d2c3e268c6dc6a07462943ad1c4b6b96468\",\n    \"tx_count\": 26,\n    \"size\": 8390,\n    \"weight\": 22985,\n    \"previousblockhash\": \"0000000000000079103da7d296e1480295df795b7379e7dffd27743e214b0b32\",\n    \"extras\": {\n      \"coinbaseRaw\": \"03b3e81f3a205468697320626c6f636b20776173206d696e65642077697468206120636172626f6e206e6567617469766520706f77657220736f75726365201209687a2009092009020de601d7986a040000\",\n      \"medianFee\": 1,\n      \"feeRange\": [\n        1,\n        1,\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"reward\": 10547567,\n      \"totalFees\": 781942,\n      \"avgFee\": 31277,\n      \"avgFeeRate\": 143,\n      \"pool\": {\n        \"id\": 137,\n        \"name\": \"Unknown\",\n        \"slug\": \"unknown\"\n      },\n      \"usd\": null\n    }\n  },\n  {\n    \"id\": \"0000000000000079103da7d296e1480295df795b7379e7dffd27743e214b0b32\",\n    \"timestamp\": 1630641655,\n    \"height\": 2091186,\n    \"version\": 541065216,\n    \"bits\": 436273151,\n    \"nonce\": 2671302918,\n    \"difficulty\": 16777216,\n    \"merkle_root\": \"c70fa944f2863dc0828ee93ec0407bb8473e3b9bb94854ffd3fa1ccb9855d76a\",\n    \"tx_count\": 43,\n    \"size\": 11427,\n    \"weight\": 32472,\n    \"previousblockhash\": \"00000000000000f015cb6ce3c007b56a053c4b3c3c86a36130e63310da787a30\",\n    \"extras\": {\n      \"coinbaseRaw\": \"03b2e81f3a205468697320626c6f636b20776173206d696e65642077697468206120636172626f6e206e6567617469766520706f77657220736f75726365201209687a2009092009020de601d7326c050000\",\n      \"medianFee\": 1,\n      \"feeRange\": [\n        1,\n        1,\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"reward\": 9806663,\n      \"totalFees\": 41038,\n      \"avgFee\": 977,\n      \"avgFeeRate\": 5,\n      \"pool\": {\n        \"id\": 137,\n        \"name\": \"Unknown\",\n        \"slug\": \"unknown\"\n      },\n      \"usd\": null\n    }\n  },\n  {\n    \"...\": \"...\"\n  }\n]"
        },
        "signet": {
            "curl": {
                "text": "/v1/blocks/53783",
                "textDisplay": "/v1/blocks[/:startHeight]"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://mempool.space/mempool.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        bitcoin: {\n          blocks\n        }\n      } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n      });\n      const getBlocks = await blocks.getBlocks({\n        startHeight: 53783\n      });\n      document.getElementById(\"result\").textContent = JSON.stringify(getBlocks, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import mempoolJS from \"@mempool/mempool.js\";\nconst init = async () => {\n    const {\n        bitcoin: {\n            blocks\n        }\n    } = mempoolJS({\n        hostname: 'DOCUMENT_LOCATION_HOST',\n        network: 'CURRENT_NETWORK'\n    });\n    const getBlocks = await blocks.getBlocks({\n        startHeight: 53783\n    });\n    console.log(getBlocks);\n};\ninit();",
            "response": "[\n  {\n    \"id\": \"0000010eeacb878340bae34af4e13551413d76a172ec302f7e50b62cb45374f2\",\n    \"timestamp\": 1630641504,\n    \"height\": 53783,\n    \"version\": 536870912,\n    \"bits\": 503404179,\n    \"nonce\": 11753379,\n    \"difficulty\": 0.002919030932507782,\n    \"merkle_root\": \"3063ff3802c920eea68bdc9303957f3e7bfd0a03c93547fd7dad14b77a07d4e8\",\n    \"tx_count\": 1,\n    \"size\": 343,\n    \"weight\": 1264,\n    \"previousblockhash\": \"00000109a7ea774fcc2d173f9a1da9595a47ff401dac67ca9edea149954210fa\",\n    \"extras\": {\n      \"coinbaseRaw\": \"0317d200\",\n      \"medianFee\": 0,\n      \"feeRange\": [\n        0,\n        0,\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"reward\": 5000000000,\n      \"totalFees\": 0,\n      \"avgFee\": 0,\n      \"avgFeeRate\": 0,\n      \"pool\": {\n        \"id\": 137,\n        \"name\": \"Unknown\",\n        \"slug\": \"unknown\"\n      },\n      \"usd\": null\n    }\n  },\n  {\n    \"id\": \"00000109a7ea774fcc2d173f9a1da9595a47ff401dac67ca9edea149954210fa\",\n    \"timestamp\": 1630640959,\n    \"height\": 53782,\n    \"version\": 536870912,\n    \"bits\": 503404179,\n    \"nonce\": 1074604,\n    \"difficulty\": 0.002919030932507782,\n    \"merkle_root\": \"888cf13ad83ba4c9d44dee7984a1dafee6c78d329178c51bf0ffe61d98df40f3\",\n    \"tx_count\": 10,\n    \"size\": 1837,\n    \"weight\": 5545,\n    \"previousblockhash\": \"000001508377eba43e83abb169ee1454daed14697267b9baf970b3fd556191e3\",\n    \"extras\": {\n      \"coinbaseRaw\": \"0316d200\",\n      \"medianFee\": 1,\n      \"feeRange\": [\n        1,\n        1,\n        {\n          \"...\": \"...\"\n        }\n      ],\n      \"reward\": 5000001415,\n      \"totalFees\": 1415,\n      \"avgFee\": 157,\n      \"avgFeeRate\": 1,\n      \"pool\": {\n        \"id\": 137,\n        \"name\": \"Unknown\",\n        \"slug\": \"unknown\"\n      },\n      \"usd\": null\n    }\n  },\n  {\n    \"...\": \"...\"\n  }\n]"
        },
        "liquid": {
            "curl": {
                "text": "/blocks/1472246",
                "textDisplay": "/blocks[/:startHeight]"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://liquid.network/liquid.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        blocks\n      } = liquidJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n      });\n      const getBlocks = await blocks.getBlocks({\n        startHeight: 1472246\n      });\n      document.getElementById(\"result\").textContent = JSON.stringify(getBlocks, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import liquidJS from \"@mempool/liquid.js\";\nconst init = async () => {\n    const {\n        blocks\n    } = liquidJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n    });\n    const getBlocks = await blocks.getBlocks({\n        startHeight: 1472246\n    });\n    console.log(getBlocks);\n};\ninit();",
            "response": "[\n  {\n    \"id\": \"0bd348c08101fef863b7263b2b44b2f6575f707f1e397da95cfe2afdd5e9ccdb\",\n    \"height\": 1472246,\n    \"version\": 570425344,\n    \"timestamp\": 1630642018,\n    \"tx_count\": 2,\n    \"size\": 10838,\n    \"weight\": 16901,\n    \"merkle_root\": \"a8cdc1ba96d1f862ca7c9aec4133a6efd14138f54c17efdbc968632a6b9cb8c8\",\n    \"previousblockhash\": \"a06c327cdd76301de57ba0cf86c5ae8b1fd8a785945065ac9e2128322bd01f31\",\n    \"mediantime\": 1630641718\n  },\n  {\n    \"id\": \"a06c327cdd76301de57ba0cf86c5ae8b1fd8a785945065ac9e2128322bd01f31\",\n    \"height\": 1472245,\n    \"version\": 570425344,\n    \"timestamp\": 1630641958,\n    \"tx_count\": 2,\n    \"size\": 10838,\n    \"weight\": 16901,\n    \"merkle_root\": \"d3c370aabe96147b59f2e40511b0d8b7ee56eeb08d45816af6c4cae710643ce7\",\n    \"previousblockhash\": \"2ec34bb6f0730aa19d7c72346d6e3382620509de048a3b03658af7db19355240\",\n    \"mediantime\": 1630641658\n  },\n  {\n    \"...\": \"...\"\n  }\n]"
        },
        "liquidtestnet": {
            "curl": {
                "text": "/blocks/150000",
                "textDisplay": "/blocks[/:startHeight]"
            },
            "response": "[\n  {\n    \"id\": \"67d5eb1aee63c6c2058a088985503ff0626fd3f7f8022bdc74fab36a359164db\",\n    \"height\": 150000,\n    \"version\": 536870912,\n    \"timestamp\": 1640871913,\n    \"tx_count\": 2,\n    \"size\": 3527,\n    \"weight\": 7430,\n    \"merkle_root\": \"40538ff1fcac07c65e36fcc230fc60f58e3a885ce9898e41bc27bcf28227e5ff\",\n    \"previousblockhash\": \"2d8c28042b03219e7e9bc6853cc3ae536e36be5639869c545a0f3dbd1309e2a5\",\n    \"mediantime\": 1640871614\n  },\n  {\n    \"id\": \"2d8c28042b03219e7e9bc6853cc3ae536e36be5639869c545a0f3dbd1309e2a5\",\n    \"height\": 149999,\n    \"version\": 536870912,\n    \"timestamp\": 1640871853,\n    \"tx_count\": 3,\n    \"size\": 4380,\n    \"weight\": 8097,\n    \"merkle_root\": \"38495212acd5e3ad4fdce7cce29c8c892b20c3ffacbcd73ecb2b234c6aca67c2\",\n    \"previousblockhash\": \"7bd9ed9ff823d4605a476a12554c75087ab7f55fa6273a1b4b1115b09bb9586e\",\n    \"mediantime\": 1640871554\n  },\n  {\n    \"...\": \"...\"\n  }\n]"
        },
        "bisq": {
            "curl": {
                "text": "/blocks/0/5",
                "textDisplay": "/blocks/:m/:n"
            },
            "commonjs": "<!DOCTYPE html>\n\n<head>\n  <script src=\"https://bisq.markets/bisq.js\"></script>\n  <script>\n    const init = async () => {\n      const {\n        blocks\n      } = bisqJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n      });\n      const getBlocks = await blocks.getBlocks({\n        index: 0,\n        length: 5\n      });\n      document.getElementById(\"result\").textContent = JSON.stringify(getBlocks, undefined, 2);\n    };\n    init();\n  </script>\n</head>\n\n<body>\n  <pre id=\"result\"></pre>\n</body>\n\n</html>",
            "esmodule": "import bisqJS from \"@mempool/bisq.js\";\nconst init = async () => {\n    const {\n        blocks\n    } = bisqJS({\n        hostname: 'DOCUMENT_LOCATION_HOST'\n    });\n    const getBlocks = await blocks.getBlocks({\n        index: 0,\n        length: 5\n    });\n    console.log(getBlocks);\n};\ninit();",
            "response": "[\n  {\n    \"height\": 772433,\n    \"time\": 1673987942000,\n    \"hash\": \"0000000000000000000280fccc53832e9faa2eb3ffe9b81b7aaf22f8d21de9d9\",\n    \"previousBlockHash\": \"00000000000000000006caddfc6bb00ccc4eb9cefa49487b6f2cef6ff118d447\",\n    \"txs\": [\n      {\n        \"txVersion\": \"1\",\n        \"id\": \"d7193e5aa61f6a209838a2d35c6c10b48914d1f0edd6b67ddfeb55bf1195e339\",\n        \"blockHeight\": 772433,\n        \"blockHash\": \"0000000000000000000280fccc53832e9faa2eb3ffe9b81b7aaf22f8d21de9d9\",\n        \"time\": 1673987942000,\n        \"inputs\": [\n          {\n            \"spendingTxOutputIndex\": 0,\n            \"spendingTxId\": \"99a45bcae3664603a679d7430e0e6e74863db1e59df6ce3b7aa22252071e6a38\",\n            \"bsqAmount\": 1452,\n            \"isVerified\": true,\n            \"address\": \"bc1qypx3xlndjpdnnhfjvdhn2p7qt79hx4r22lmrsm\",\n            \"time\": 1673987942000\n          },\n          {\n            \"spendingTxOutputIndex\": 2,\n            \"spendingTxId\": \"99a45bcae3664603a679d7430e0e6e74863db1e59df6ce3b7aa22252071e6a38\",\n            \"bsqAmount\": 4094415,\n            \"isVerified\": false,\n            \"address\": \"bc1qjdu7lt393rnjxwpvdkqhh486hdhhq5yelv4vny\",\n            \"time\": 1673987942000\n          }\n        ],\n        \"outputs\": [\n          {\n            \"txVersion\": \"1\",\n            \"txId\": \"d7193e5aa61f6a209838a2d35c6c10b48914d1f0edd6b67ddfeb55bf1195e339\",\n            \"index\": 0,\n            \"bsqAmount\": 1361,\n            \"btcAmount\": 0,\n            \"height\": 772433,\n            \"isVerified\": true,\n            \"burntFee\": 91,\n            \"invalidatedBsq\": 0,\n            \"address\": \"bc1q8l0aljdfdmtvg94lejhdue35x6afydtylqy0gf\",\n            \"scriptPubKey\": {\n              \"addresses\": [\n                \"bc1q8l0aljdfdmtvg94lejhdue35x6afydtylqy0gf\"\n              ],\n              \"asm\": \"0 3fdfdfc9a96ed6c416bfccaede663436ba923564\",\n              \"hex\": \"00143fdfdfc9a96ed6c416bfccaede663436ba923564\",\n              \"reqSigs\": 1,\n              \"type\": \"ScriptType.WITNESS_V0_KEYHASH(name=witness_v0_keyhash)\"\n            },\n            \"time\": 1673987942000,\n            \"txType\": \"PAY_TRADE_FEE\",\n            \"txTypeDisplayString\": \"Pay trade fee\",\n            \"txOutputType\": \"BSQ_OUTPUT\",\n            \"txOutputTypeDisplayString\": \"BSQ\",\n            \"lockTime\": -1,\n            \"isUnspent\": true\n          },\n          {\n            \"txVersion\": \"1\",\n            \"txId\": \"d7193e5aa61f6a209838a2d35c6c10b48914d1f0edd6b67ddfeb55bf1195e339\",\n            \"index\": 1,\n            \"bsqAmount\": 0,\n            \"btcAmount\": 9630000,\n            \"height\": 772433,\n            \"isVerified\": false,\n            \"burntFee\": 91,\n            \"invalidatedBsq\": 0,\n            \"address\": \"bc1qnclhrh6kleg2ghxvhypta2w2a39p6v8dtgts7n\",\n            \"scriptPubKey\": {\n              \"addresses\": [\n                \"bc1qnclhrh6kleg2ghxvhypta2w2a39p6v8dtgts7n\"\n              ],\n              \"asm\": \"0 9e3f71df56fe50a45cccb902bea9caec4a1d30ed\",\n              \"hex\": \"00149e3f71df56fe50a45cccb902bea9caec4a1d30ed\",\n              \"reqSigs\": 1,\n              \"type\": \"ScriptType.WITNESS_V0_KEYHASH(name=witness_v0_keyhash)\"\n            },\n            \"time\": 1673987942000,\n            \"txType\": \"PAY_TRADE_FEE\",\n            \"txTypeDisplayString\": \"Pay trade fee\",\n            \"txOutputType\": \"BTC_OUTPUT\",\n            \"txOutputTypeDisplayString\": \"BTC\",\n            \"lockTime\": -1,\n            \"isUnspent\": false\n          },\n          {\n            \"...\": \"...\"\n          }\n        ],\n        \"txType\": \"PAY_TRADE_FEE\",\n        \"txTypeDisplayString\": \"Pay trade fee\",\n        \"burntFee\": 91,\n        \"invalidatedBsq\": 0,\n        \"unlockBlockHeight\": 0\n      }\n    ]\n  },\n  {\n    \"height\": 772432,\n    \"time\": 1673987873000,\n    \"hash\": \"00000000000000000006caddfc6bb00ccc4eb9cefa49487b6f2cef6ff118d447\",\n    \"previousBlockHash\": \"00000000000000000001cd35f6a74c1936e57f755dc8ec3f5981cf50bb389c41\",\n    \"txs\": [\n      {\n        \"txVersion\": \"1\",\n        \"id\": \"1af862fa6cc9cf14123ff5139d43cbd9aae57160abe59e521ad6890553efd2b1\",\n        \"blockHeight\": 772432,\n        \"blockHash\": \"00000000000000000006caddfc6bb00ccc4eb9cefa49487b6f2cef6ff118d447\",\n        \"time\": 1673987873000,\n        \"inputs\": [\n          {\n            \"spendingTxOutputIndex\": 0,\n            \"spendingTxId\": \"e679f39f5b405473e36e318b3ac85bb01291eb544a75f18b1027a62b8d059687\",\n            \"bsqAmount\": 3349,\n            \"isVerified\": true,\n            \"address\": \"bc1q73nu4cwg4wfpfxhmuvmz6njytp77uhu6a2n28z\",\n            \"time\": 1673987873000\n          }\n        ],\n        \"outputs\": [\n          {\n            \"txVersion\": \"1\",\n            \"txId\": \"1af862fa6cc9cf14123ff5139d43cbd9aae57160abe59e521ad6890553efd2b1\",\n            \"index\": 0,\n            \"bsqAmount\": 3335,\n            \"btcAmount\": 0,\n            \"height\": 772432,\n            \"isVerified\": true,\n            \"burntFee\": 14,\n            \"invalidatedBsq\": 0,\n            \"address\": \"bc1q9gkkdvsjpux64kxvdv8z5eydd2zyhac6q7uyq0\",\n            \"scriptPubKey\": {\n              \"addresses\": [\n                \"bc1q9gkkdvsjpux64kxvdv8z5eydd2zyhac6q7uyq0\"\n              ],\n              \"asm\": \"0 2a2d66b2120f0daad8cc6b0e2a648d6a844bf71a\",\n              \"hex\": \"00142a2d66b2120f0daad8cc6b0e2a648d6a844bf71a\",\n              \"reqSigs\": 1,\n              \"type\": \"ScriptType.WITNESS_V0_KEYHASH(name=witness_v0_keyhash)\"\n            },\n            \"spentInfo\": {\n              \"height\": 772432,\n              \"inputIndex\": 0,\n              \"txId\": \"b75a4da574ccc5aa67704f1a6b38fda5f4ec6a9efd458a98d9915cf5f62b43d5\"\n            },\n            \"time\": 1673987873000,\n            \"txType\": \"PAY_TRADE_FEE\",\n            \"txTypeDisplayString\": \"Pay trade fee\",\n            \"txOutputType\": \"BSQ_OUTPUT\",\n            \"txOutputTypeDisplayString\": \"BSQ\",\n            \"lockTime\": -1,\n            \"isUnspent\": false\n          },\n          {\n            \"txVersion\": \"1\",\n            \"txId\": \"1af862fa6cc9cf14123ff5139d43cbd9aae57160abe59e521ad6890553efd2b1\",\n            \"index\": 1,\n            \"bsqAmount\": 0,\n            \"btcAmount\": 1150000,\n            \"height\": 772432,\n            \"isVerified\": false,\n            \"burntFee\": 14,\n            \"invalidatedBsq\": 0,\n            \"address\": \"bc1qf3lsutsfa7r5dgndsw47s3yp36j9350jv46w9n\",\n            \"scriptPubKey\": {\n              \"addresses\": [\n                \"bc1qf3lsutsfa7r5dgndsw47s3yp36j9350jv46w9n\"\n              ],\n              \"asm\": \"0 4c7f0e2e09ef8746a26d83abe844818ea458d1f2\",\n              \"hex\": \"00144c7f0e2e09ef8746a26d83abe844818ea458d1f2\",\n              \"reqSigs\": 1,\n              \"type\": \"ScriptType.WITNESS_V0_KEYHASH(name=witness_v0_keyhash)\"\n            },\n            \"time\": 1673987873000,\n            \"txType\": \"PAY_TRADE_FEE\",\n            \"txTypeDisplayString\": \"Pay trade fee\",\n            \"txOutputType\": \"BTC_OUTPUT\",\n            \"txOutputTypeDisplayString\": \"BTC\",\n            \"lockTime\": -1,\n            \"isUnspent\": false\n          }\n        ],\n        \"txType\": \"PAY_TRADE_FEE\",\n        \"txTypeDisplayString\": \"Pay trade fee\",\n        \"burntFee\": 14,\n        \"invalidatedBsq\": 0,\n        \"unlockBlockHeight\": 0\n      },\n      {\n        \"txVersion\": \"1\",\n        \"id\": \"b75a4da574ccc5aa67704f1a6b38fda5f4ec6a9efd458a98d9915cf5f62b43d5\",\n        \"blockHeight\": 772432,\n        \"blockHash\": \"00000000000000000006caddfc6bb00ccc4eb9cefa49487b6f2cef6ff118d447\",\n        \"time\": 1673987873000,\n        \"inputs\": [\n          {\n            \"spendingTxOutputIndex\": 0,\n            \"spendingTxId\": \"1af862fa6cc9cf14123ff5139d43cbd9aae57160abe59e521ad6890553efd2b1\",\n            \"bsqAmount\": 3335,\n            \"isVerified\": true,\n            \"address\": \"bc1q9gkkdvsjpux64kxvdv8z5eydd2zyhac6q7uyq0\",\n            \"time\": 1673987873000\n          }\n        ],\n        \"outputs\": [\n          {\n            \"txVersion\": \"1\",\n            \"txId\": \"b75a4da574ccc5aa67704f1a6b38fda5f4ec6a9efd458a98d9915cf5f62b43d5\",\n            \"index\": 0,\n            \"bsqAmount\": 3321,\n            \"btcAmount\": 0,\n            \"height\": 772432,\n            \"isVerified\": true,\n            \"burntFee\": 14,\n            \"invalidatedBsq\": 0,\n            \"address\": \"bc1qycreezr9htdwcajq4rvlrxvt6qpvun0m7gn3pw\",\n            \"scriptPubKey\": {\n              \"addresses\": [\n                \"bc1qycreezr9htdwcajq4rvlrxvt6qpvun0m7gn3pw\"\n              ],\n              \"asm\": \"0 26079c8865badaec7640a8d9f1998bd002ce4dfb\",\n              \"hex\": \"001426079c8865badaec7640a8d9f1998bd002ce4dfb\",\n              \"reqSigs\": 1,\n              \"type\": \"ScriptType.WITNESS_V0_KEYHASH(name=witness_v0_keyhash)\"\n            },\n            \"time\": 1673987873000,\n            \"txType\": \"PAY_TRADE_FEE\",\n            \"txTypeDisplayString\": \"Pay trade fee\",\n            \"txOutputType\": \"BSQ_OUTPUT\",\n            \"txOutputTypeDisplayString\": \"BSQ\",\n            \"lockTime\": -1,\n            \"isUnspent\": true\n          },\n          {\n            \"txVersion\": \"1\",\n            \"txId\": \"b75a4da574ccc5aa67704f1a6b38fda5f4ec6a9efd458a98d9915cf5f62b43d5\",\n            \"index\": 1,\n            \"bsqAmount\": 0,\n            \"btcAmount\": 1150000,\n            \"height\": 772432,\n            \"isVerified\": false,\n            \"burntFee\": 14,\n            \"invalidatedBsq\": 0,\n            \"address\": \"bc1qyuhuvswhun0gwhd6jj2qczhd83us89leakv5j8\",\n            \"scriptPubKey\": {\n              \"addresses\": [\n                \"bc1qyuhuvswhun0gwhd6jj2qczhd83us89leakv5j8\"\n              ],\n              \"asm\": \"0 272fc641d7e4de875dba94940c0aed3c790397f9\",\n              \"hex\": \"0014272fc641d7e4de875dba94940c0aed3c790397f9\",\n              \"reqSigs\": 1,\n              \"type\": \"ScriptType.WITNESS_V0_KEYHASH(name=witness_v0_keyhash)\"\n            },\n            \"time\": 1673987873000,\n            \"txType\": \"PAY_TRADE_FEE\",\n            \"txTypeDisplayString\": \"Pay trade fee\",\n            \"txOutputType\": \"BTC_OUTPUT\",\n            \"txOutputTypeDisplayString\": \"BTC\",\n            \"lockTime\": -1,\n            \"isUnspent\": false\n          }\n        ],\n        \"txType\": \"PAY_TRADE_FEE\",\n        \"txTypeDisplayString\": \"Pay trade fee\",\n        \"burntFee\": 14,\n        \"invalidatedBsq\": 0,\n        \"unlockBlockHeight\": 0\n      }\n    ]\n  },\n  {\n    \"...\": \"...\"\n  }\n]"
        }
    }
};